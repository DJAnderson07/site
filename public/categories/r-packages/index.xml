<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R Packages on Data Science in Education</title>
    <link>/categories/r-packages/</link>
    <description>Recent content in R Packages on Data Science in Education</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Daniel Anderson</copyright>
    <lastBuildDate>Sat, 10 Feb 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/r-packages/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sharing some functions from my personal R package</title>
      <link>/post/sharing-some-functions-from-my-personal-r-package/</link>
      <pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/sharing-some-functions-from-my-personal-r-package/</guid>
      <description>In this post I basically just wanted to share some recent developments that I&amp;rsquo;ve made to my personal R package {sundry}. All of the recent advancements have been made to work with the tidyverse, so things like group_by should work seamlessly. If you feel like giving the package a whirl, I&amp;rsquo;d love any feedback you have or bugs you may find. At this point the package is only on github.</description>
    </item>
    
    <item>
      <title>esvis: Binned Effect Size Plots</title>
      <link>/post/esvis-binned-effect-size-plots/</link>
      <pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/esvis-binned-effect-size-plots/</guid>
      <description>In this post, I&amp;rsquo;d like to share one of the more unique plots from esvis - the binned effect size plot. The overall purpose of the binned effect size plot is to evaluate if the differences between two distributions are consistent across the scale. We&amp;rsquo;ll start with a quick example from the package, and then move to a simulated data example.
Quick example The API for esvis is consistent across functions, so we use the same outcome ~ predictor forumula as the first argument, followed by the data for all functions.</description>
    </item>
    
  </channel>
</rss>